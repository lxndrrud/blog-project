version: '3'
services:
  postgres:
    image: postgres:14.1-alpine
    container_name: postgres-blog
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: blog
    networks: 
      - blog_network
    ports:
      - 5432:5432

  #cacher:
  #  container_name: cacher
  #  command: ["redis-server", "/etc/redis/redis.conf"]
  #  image: redis:7.0.5-alpine
  #  restart: always
  #  ports:
  #    - 6379:6379
  #  depends_on:
  #    - postgres
  #  networks: 
  #    - blog_network
  #  volumes:
  #    - ./redis/redis.conf:/etc/redis/redis.conf

  #pgadmin: 
  #  container_name: pgadmin-blog
  #  image: dpage/pgadmin4:6.13
  #  restart: always
  #  ports:
  #    - 9000:80
  #  depends_on:
  #    - postgres
  #  networks: 
  #    - blog_network
  #  environment:
  #    - PGADMIN_DEFAULT_EMAIL=admin@admin.ru
  #    - PGADMIN_DEFAULT_PASSWORD=123456

  adminer:
    image: adminer
    container_name: adminer-blog
    restart: always
    ports:
      - 8090:8080
    depends_on:
      - postgres
    networks: 
      - blog_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-blog
    depends_on:
      - postgres
    volumes:
      - ./backend:/usr/src/app
    ports:
      - 8001:8001
    networks: 
      - blog_network

  reverse-proxy:
    image: nginx:1.20.0
    container_name: nginx-blog
    restart: unless-stopped
    depends_on:
      - backend
    ports:
        - '80:80'
    links:
        - backend
        - postgres
        - pgadmin
    networks:
        - blog_network
    volumes:
        - './backend/storage:/var/www/storage'
        - './frontend/dist:/var/www/reservations'
        - './nginx:/var/log/nginx'
        - './nginx/prod/conf.d:/etc/nginx/conf.d'



networks:
  blog_network:
    external: False
